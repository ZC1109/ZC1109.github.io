{"meta":{"title":"释","subtitle":"","description":"","author":null,"url":"https://ZC1109.github.io","root":"/"},"pages":[],"posts":[{"title":"了解PHP序列化与反序列化(1)","slug":"了解PHP序列化与反序列化(1)","date":"2020-05-13T08:19:32.808Z","updated":"2020-05-13T08:19:27.475Z","comments":true,"path":"2020/05/13/了解PHP序列化与反序列化(1)/","link":"","permalink":"https://zc1109.github.io/2020/05/13/%E4%BA%86%E8%A7%A3PHP%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96(1)/","excerpt":"序列化是将变量转百换为可保存或传输的字符串的过程；","text":"序列化是将变量转百换为可保存或传输的字符串的过程；反序列化就是在适当的时候把这个字符串再转化成原来的变量使用。这两个过程结合起来，可以轻松地存储和传输数据，使程度序更具维护性。PHP中的序列化和反序列化分别通过函数serialize()和unserialize()即可实现。serialize()的参数可以是resource类型外的所有变量类型，最常见的是用来序列化对象，unseialize()将属serialize的返回结果作为参数，进行反序列化，得到原对象。简单一点来说php使用serialize这个过程被称为序列化，使用unserialize这个过程被称为反序列化。 serialize实例运行结果： unseialize实例运行结果：","categories":[],"tags":[]},{"title":"一道简单密码的栅栏","slug":"一道简单密码的栅栏","date":"2020-04-20T07:02:19.633Z","updated":"2020-04-20T07:02:15.954Z","comments":true,"path":"2020/04/20/一道简单密码的栅栏/","link":"","permalink":"https://zc1109.github.io/2020/04/20/%E4%B8%80%E9%81%93%E7%AE%80%E5%8D%95%E5%AF%86%E7%A0%81%E7%9A%84%E6%A0%85%E6%A0%8F/","excerpt":"栅栏密码属于古典密码中最经典的移项式密码，","text":"栅栏密码属于古典密码中最经典的移项式密码，与凯撒密码等替换式密码代表了密码学中最重要的两个概念（扩散和混淆）以题为例：篱笆墙，想必大家直接就能联想到栅栏，解压压缩包得到这样一串字符，长度为26；因为26=2*13，所以可以分为2、13栏，这里我们以13栏为例，每隔2个字符进行分割便得到：第一栏：flag{wethinkw第二栏：ehavetheflag}连接起来就得到flag了：flag{wethinkwehavetheflag}","categories":[],"tags":[]},{"title":"CTF--图片隐写之修改图片宽和高","slug":"CTF--图片隐写之修改图片宽和高","date":"2020-04-05T05:17:53.188Z","updated":"2020-04-05T05:17:42.672Z","comments":true,"path":"2020/04/05/CTF--图片隐写之修改图片宽和高/","link":"","permalink":"https://zc1109.github.io/2020/04/05/CTF--%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99%E4%B9%8B%E4%BF%AE%E6%94%B9%E5%9B%BE%E7%89%87%E5%AE%BD%E5%92%8C%E9%AB%98/","excerpt":"这也是做图片杂项时前几步需要考虑的，有时没有任何线索就去修改宽高","text":"这也是做图片杂项时前几步需要考虑的，有时没有任何线索就去修改宽高比如我们拿到这样一个图片)一看这个图片就明显缺失了一部分，直接去修改图片的宽和高，查看一下图片的宽高：1119*512。将1119转换成16进制为45f，512转换成16进制就是200，把图片拉进winhex里边:找到宽和高代表的16进制码，其实第二行开始的00 00 04 5F 代表的就是宽，00 00 02 00代表的是高，这张图片明显高不足，那么直接将02 00 改为宽代表的16进制码，即04 5F，改完之后直接Ctrl+s保存，再打开直接看到了flag。","categories":[],"tags":[]},{"title":"PHP环境变量配置以及sublime text（PHP编译器）配置php环境","slug":"PHP环境变量配置以及sublime text（PHP编译器）配置php环境","date":"2020-04-05T04:14:54.587Z","updated":"2020-04-05T04:14:49.765Z","comments":true,"path":"2020/04/05/PHP环境变量配置以及sublime text（PHP编译器）配置php环境/","link":"","permalink":"https://zc1109.github.io/2020/04/05/PHP%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E4%BB%A5%E5%8F%8Asublime%20text%EF%BC%88PHP%E7%BC%96%E8%AF%91%E5%99%A8%EF%BC%89%E9%85%8D%E7%BD%AEphp%E7%8E%AF%E5%A2%83/","excerpt":"PHP环境安装及配置比较适合的还是phpstudy，直接官网下载就可以，版本不能太高。","text":"PHP环境安装及配置比较适合的还是phpstudy，直接官网下载就可以，版本不能太高。 安装好之后需要配置环境变量path：右击 “电脑”–属性–&gt;高级系统设置–&gt;环境变量–&gt;打开用户变量和系统变量里的path。随后需要在电脑环境中添加php.exe所在位置。箭头所指的就是我自己的php.exe所在位置，添加好之后点击确定。最后确认一下是否安装成功：windows+r 输入cmd打开命令函，输入php-v这样就算是配置成功！！ sublime text中配置PHP打开sublime text ，找到New build System，打开。之后会出现这样的代码：将里面的代码改为： { &quot;cmd&quot;:[&quot;php&quot;,&quot;$file&quot;], &quot;file_regex&quot;:&quot;php$&quot;, &quot;selector&quot;:&quot;source.php&quot; } 然后Ctrl+s保存到默认目录下，修改文件名为：php.sublime-build再新建一个文件，直接可以写代码了，保存代码的时候文件要加后缀名.phpCtrl+B即可运行代码！","categories":[],"tags":[]},{"title":"写hexo博客时好用的工具！(1)","slug":"写hexo博客时好用的工具！(1)","date":"2020-03-01T06:05:13.131Z","updated":"2020-03-01T06:04:47.868Z","comments":true,"path":"2020/03/01/写hexo博客时好用的工具！(1)/","link":"","permalink":"https://zc1109.github.io/2020/03/01/%E5%86%99hexo%E5%8D%9A%E5%AE%A2%E6%97%B6%E5%A5%BD%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%EF%BC%81(1)/","excerpt":"","text":"在这里给大家推荐一个好用的工具，链接放在下边了！Marxio 1）设置标题：用“#”的个数来控制标题大小，”#”越多标题就越小。 2）列表：在列表前边加”- “(减号+空格)，如图：3）列表：数字+英文输入法下的句号也可以。4）图片：!+[]+() ，中括号相当于一个说明，不会显示出来，小括号里边放图片地址就可以了.(英文输入法下才可以，”+“不用写上，这里只是为了让大家看得更清楚。)5）超文本链接：[]+() 例如百度： 在博客上就会显示为”baidu”的字样，点击便会跳转。6）文字加粗：在文字两边各加两个“ ** ”就可以了。7）斜体：在文字两边各加一个“ * ”就可以了。8）调节文字样式、颜色、字体：在博客中就显示为： 9）文字居中:10）文字居右：居左的话将”right“改为”left“即可。11）引用样式：&gt;加空格即可。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-02-15T20:15:45.092Z","updated":"2020-02-15T20:15:45.092Z","comments":true,"path":"2020/02/16/hello-world/","link":"","permalink":"https://zc1109.github.io/2020/02/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}